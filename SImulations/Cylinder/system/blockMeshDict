/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.01;

vertices
(
    // pre-block
    (-50   -75   0.5) // 0
    ( -45  -75   0.5) // 1
    ( -45  -75  -0.5) // 2 
    (-50   -75  -0.5) // 3
    
    (-50    75   0.5) // 4
    ( -45   75   0.5) // 5
    ( -45   75  -0.5) // 6
    (-50    75  -0.5) // 7

    // obstacle blocks
    (  45  -75  0.5) // 8
    (  45  -75 -0.5) // 9

    (-1.767766953 -1.767766953  0.5) // 10
    ( 1.767766953 -1.767766953  0.5) // 11

    ( 1.767766953 -1.767766953 -0.5) // 12
    (-1.767766953 -1.767766953 -0.5) // 13

    (-1.767766953  1.767766953  0.5) // 14
    (-1.767766953  1.767766953 -0.5) // 15

    ( 1.767766953  1.767766953  0.5) // 16
    ( 1.767766953  1.767766953 -0.5) // 17

    (  45   75  0.5) // 18
    (  45   75 -0.5) // 19

    // post-block
    (   100   -75  0.5) // 20
    (   100   -75 -0.5) // 21
    (   100    75  0.5) // 22
    (   100    75 -0.5) // 23

    (-50 10 0.5) // 24 // P1
    (-50 10 -0.5) // 25 // P1'

    (-50 -10 0.5) // 26 // P2
    (-50 -10 -0.5) // 27 // P2'

    (100 10 0.5) // 28 // P3
    (100 10 -0.5) // 29 // P3'

    (100 -10 0.5) // 30 // P4
    (100 -10 -0.5) // 31 // P4'
);

blocks
(
    // pre-block
    hex ( 0  1  2  3  4  5  6  7) ( 5 1 75) simpleGrading (1 1 1)

    // obstacle blocks
    
    hex ( 1  8  9  2 10 11 12 13) (75 1 75) simpleGrading (1 1 1) // bottom
    hex ( 1 10 13  2  5 14 15  6) (75 1 75) simpleGrading (1 1 1) // left
    hex (14 16 17 15  5 18 19  6) (75 1 75) simpleGrading (1 1 1) // top
    hex (11  8  9 12 16 18 19 17) (75 1 75) simpleGrading (1 1 1) // right

    // post-block
    hex ( 8 20 21  9 18 22 23 19) (55 1 75) simpleGrading (1 1 1)
);

/*blocks
(
    // pre-block
    hex ( 4  24  25  7  22  28  29  23) ( 60 1 90) simpleGrading (1 1 1)

    // obstacle blocks

    hex ( 26  30  25  31 10 11 12 13) (90 1 90) simpleGrading (1 1 1) // bottom -> P2 and P4
    hex ( 26 10 13  27  24 14 15  25) (90 1 90) simpleGrading (1 1 1) // left -> P2 and P1
    hex (14 16 17 15  24 28 29  25) (90 1 90) simpleGrading (1 1 1) // top -> P1 and P3
    hex (11  30  31 12 16 28 29 17) (90 1 90) simpleGrading (1 1 1) // right -> P3 and P4

    // post-block
    hex ( 26 0 3 27 30 20 21 31) (180 1 90) simpleGrading (1 1 1)
);*/

edges
(
    arc 10 11 (   0 -2.5  0.5)
    arc 12 13 (   0 -2.5 -0.5)
    arc 14 10 (-2.5    0  0.5)
    arc 15 13 (-2.5    0 -0.5)
    arc 14 16 (   0  2.5  0.5)
    arc 15 17 (   0  2.5 -0.5)
    arc 16 11 ( 2.5    0  0.5)
    arc 17 12 ( 2.5    0 -0.5)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            ( 0  4  7  3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 21 23 22)
        );
    }
    wall
    {
        type wall;
        faces
        (
            ( 4  5  6  7)
            ( 5 18 19  6)
            (18 22 23 19)

            ( 0  1  2  3)
            ( 1  8  9  2)
            ( 8 20 21  9)
        );
    }
    obstacle
    {
        type wall;
        faces
        (
            (10 11 12 13)
            (11 16 17 12)
            (14 16 17 15)
            (10 14 15 13)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            ( 0  1  5  4)
            ( 1 10 14  5)
            (14 16 18  5)
            (11  8 18 16)
            ( 1  8 11 10)
            ( 8 20 22 18)

            ( 3  7  6  2)
            ( 2  6 15 13)
            (15  6 19 17)
            (12 17 19  9)
            ( 2 13 12  9)
            ( 9 19 23 21)
        );
    }
);

mergePatchPairs
(
);
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
